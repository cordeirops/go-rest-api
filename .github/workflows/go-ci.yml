name: Go CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'

      - name: Initialize module
        run: |
          go get github.com/gorilla/mux@v1.8.1
          go mod tidy

      - name: Run tests with coverage
        run: |
          go test -v -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          cache: true
          version: latest
          args: --timeout=5m --exclude-use-default=false

  

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/go-rest-api:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/go-rest-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [ build, lint, docker ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'

      - name: Build application
        run: |
          go build -o ./dist/app ./cmd/api
          mkdir -p ./public
          cp ./dist/app ./public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
          force_orphan: true

  discord:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Discord Webhook
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          template: "avatar-with-link"
          include-extras: true